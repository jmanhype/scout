version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: scout_prod
      POSTGRES_USER: scout
      POSTGRES_PASSWORD: ${DB_PASSWORD:-scout_secure_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./priv/repo/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scout -d scout_prod"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Scout Application
  scout:
    build: .
    environment:
      DATABASE_URL: "postgres://scout:${DB_PASSWORD:-scout_secure_pass}@postgres:5432/scout_prod"
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:-}
      PORT: 4050
      HOST: ${HOST:-0.0.0.0}
      MIX_ENV: prod
    ports:
      - "${PORT:-4050}:4050"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4050/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Oban (optional, for distributed job processing)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Grafana for monitoring (optional)
  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

volumes:
  postgres_data:
  redis_data:
  grafana_data:
  prometheus_data:

networks:
  default:
    driver: bridge